AFLOCK(1)				   chromflock documentation				    AFLOCK(1)

       #NAME aflock — the contact assigner in chromflock.

SYNOPSIS
       aflock  [-A  –aFile  fname]  [-l	 –low th] [-h –high th] [-n –nStruct N] [-R –radius R] [-Q –vq q] [-m
       –mArgs args] [-I –init] [-F –final] [-U –update] [-B –blockupdate] [-S –score] [–rpos  fname]  [–prpos
       fname] [–diploid]

DESCRIPTION
       aflock  is  to  be  used before, between and after mflock is used.  Typically in a script generated by
       chromflock.  aflock can be used to initialize N new struc‐ tures (or actually their  W  matrices),  it
       can  also be used to update the W matrices by moving contacts between them, or to add more contacts to
       them.

       The contact probability matix, passed as the aFile is supposed to be a [NxN] symmetric  matrix  stored
       linearly	 and  encoded  as doubles.  Since the A matrix should be symmetric either row or column order
       will work.

       If the same radial preference is to be enforced for all structures, this can be passed directly as  an
       argument	 to  mflock (use the -mArgs argument).	To as‐ sign a radial preference with some probability
       to each structure, use the –rpos and –prpos pair of arguments.  That will  generate  a  separate	 file
       with radial constrains for each structure which is updated in the same way as W by aflock.

   MODES
       There are three modes,

       • in initialization mode ( —init ), the entries (m,n) where A_mn=1 are assigned to all W matrices.

       • In update mode, ( —update ) the contact maps, W, are updated with more contacts, or the contacts are
	 re-distributed among them.

       • The finalization mode ( —final ) is used to creates some summary statistics.

OPTIONS
       --diploid
	      Run in diploid mode.  This means that there will be two copies of each chromosome.

       -A file, --aFile file
	      Specifies a file that contains the contact probability matrix.

       -Q w, --vq q
	      Sets the volume quotient, q of the beads, i.e. how large the volume of all beads should  be  in
	      contrast	to  the volume of the nucleus.	By specifying a volume quotient, the bead radius will
	      be set and hence it is not possible to use -Q and -R simultaneously.

       -l th, --low th
	      Sets the lower threshold to use, i.e., the lowest values of A to use.

       -h th, --high th
	      Sets the lower threshold to use, i.e., the highest values of A to use.

       -R r0, --radius r0
	      Sets the radius of all beads to Ar r0 (they can’t be set	individually).	 Probably  you	would
	      like to use -Q instead.

       -m args, --mArgs args
	      Set the arguments to be used by mflock, these will be passed over to the file named mflock_jobs
	      that will be created.

       -I, --init
	      Set the mode to initialization.

       -U, --update
	      Set the mode to update.

       -B, --blockupdate
	      Set the mode to update, and blocks failed contacts be assigned again.

       -F, --final
	      Set the mode to finialization.  This does not update the structures or their contact indication
	      matrices.	 This mode loops over all structures and sums up all contacts to all_contacts.double.
	      It also creates a mean radial profile that is written to radial_profile.csv.

       -h, --help
	      Show a brief help message.

       --rpos fname
	      Specifies a file that contains the radial preferences for each bead.  The file should be encod‐
	      ed as double.  Only to be used together with –prpos.

       --prpos fname
	      Specifies	 a  file  that	contains the probability or proportion of structures that should have
	      each radial constraint.  The file should be encoded as double.  Only to be used with –rpos.

EXAMPLES
       See the script /util/chromflock_gen.

   Basic usage:
       Initialize 10,000 structures using the contact probability matrix in A.double and give the beads a to‐
       tal volume that is 20% of the nuclei.

	      $ aflock --init --aFile A.double --nStruct 10000 --vq 0.02

SEE ALSO
       chromflock, mflock

WEB PAGE
       <https://github.com/elgw/chromflock/>

REPORTING BUGS
       Please report bugs at <https://github.com/elgw/chromflock/issues/>

COPYRIGHT
       Copyright © 2022 Erik Wernersson.  License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licens‐
       es/gpl.html>.  This is free software: you are free to change and redistribute it.  There is NO WARRAN‐
       TY, to the extent permitted by law.

AUTHORS
       Erik Wernersson.

Version 0.3.2					     2023					    AFLOCK(1)
