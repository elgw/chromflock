.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "MFLOCK" "1" "2023" "Version 0.3.2" "chromflock documentation"
.hy
.SH NAME
.PP
\f[B]mflock\f[R] \[em] the molecular dynamics optimizer in chromflock.
.SH SYNOPSIS
.PP
mflock [-w \[en]wFile wFile] [-L \[en]lFile lFile] [-x \[en]xFile xfile]
[-n \[en]maxiter X] [-t \[en]maxtime X] [-s \[en]seed seed] [-r
\[en]rFile rfile] [-V \[en]kVol kVol] [-I \[en]kInt kInt] [-S \[en]kDom
kDom] [-G \[en]kRad kRad] [-Q \[en]vq vq] [-R \[en]radius r0] [-v
\[en]verbose level] [-o \[en]oFolder ofolder] [-z \[en]cmmz] [\[en]ea -a
\[en]eb -b \[en]eb -c] [\[en]dconf file]
.SH DESCRIPTION
.PP
\f[B]mflock\f[R] uses molecular dynamics to find a 3D structure based on
a contact indication matrix W.
For a complete description on how it is implemented, please see the
documentation under `doc/' in the source directory.
In short: Verlet integration is used to update the positions of the
beads which are under influence of a set of forces:
.PP
A.
Volume exclusion (beads should not overlap), controlled by kVol
.PP
B.
Domain containment, that keeps the beads in the unit sphere/ellipsoid,
controlled by kDom
.PP
C.
Interaction forces that keeps beads with indicated contacts to be close
to each others, controlled by kInt
.PP
D.
Possibly also a radial preference per bead, controlled by kRad By design
all beads have to have the same size and the geometry is either a sphere
or an ellipsoid where the axes 1==a>=b>=c>0.
.SH OPTIONS
.TP
\f[B]-w file\f[R], \f[B]--wFile file\f[R]
Specifies the contact indicator matrix to be used where 1=contact, and
0=non contact.
A force of kInt will be placed between beads that are in contact.
.TP
\f[B]-L file\f[R], \f[B]--lFile file\f[R]
Specify a file with labels (chromosome) for the beads.
.TP
\f[B]-x file\f[R], \f[B]--xFile file\f[R]
Specify a file with coordinates for the beads.
.TP
\f[B]-s x\f[R], \f[B]--seed x\f[R]
Set a seed for the random number generator.
If not \f[C]time(NULL)*getpid()\f[R] will be used.
.TP
\f[B]-r file\f[R], \f[B]--rFile file\f[R]
Specify a file with radial information to be used with kRad
.TP
\f[B]-n n\f[R], \f[B]--maxiter n\f[R]
Set the number of iterations to be used.
.TP
\f[B]-t t\f[R], \f[B]--maxtime t\f[R]
Limit the simulations in time
.TP
\f[B]-V k\f[R], \f[B]--kVol k\f[R]
Set the volume exclusion force
.TP
\f[B]-I k\f[R], \f[B]--kInt k\f[R]
Set the interaction force.
.TP
\f[B]-S k\f[R], \f[B]--kDom k\f[R]
Set the force used to keep the beads in the domain.
.TP
\f[B]-G k\f[R], \f[B]--kRad k\f[R]
Set the force for the radial guidance of the beads.
.TP
\f[B]-Q vq\f[R], \f[B]--vq vq\f[R]
Set the volume quotient domain/beads.
Can not be combined with -R.
.TP
\f[B]-R r0\f[R], \f[B]--radius r0\f[R]
Set the bead radius.
.TP
\f[B]--ea a\f[R], and \f[B]--eb b\f[R], and \f[B]--eb c\f[R]
If these three arguments are set, an ellipsoid geometry is used instead
of a spherical.
The parameters control the radius of the major axes, 1=a>=b>=c>0, and
the ellipsoid is given by x^2/a^2+y^2/b^2+z^2/c^2=1
.TP
\f[B]-v level\f[R], \f[B]--verbose level\f[R]
Set verbosity level
.TP
\f[B]-o folder\f[R], \f[B]--oFolder folder\f[R]
specify output folder
.TP
\f[B]-z\f[R], \f[B]--cmmz\f[R]
Write compressed chimera files.
.TP
\f[B]-c\f[R], \f[B]--compress\f[R]
Use chromosome compression.
.TP
\f[B]-a\f[R], \f[B]--live\f[R]
Pops up a renderer that shows the beads during the simulation.
Requires that mflock is compiled with SDL2.
.TP
\f[B]-h\f[R], \f[B]--help\f[R]
Show a brief help message.
.TP
\f[B]--dconf file\f[R]
Set the name of the Lua script to control the forces and iterations of
the simulation.
This is recommended over specifying at command line.
.SS wFile
.PP
The wFile contains W, a [NxN] size symmetric matrix stored linearly and
encoded as `uint8'.
.SS xFile
.PP
The xFile contains 3D coordinates X that the molecular dynamics will
start from.
If not passed, beads will be placed randomly within the domain.
Note that the parser is primitive and might fail if the xFile is edited
without care.
It reads comma separated values and does not accept headers, comments,
etc.
.SH oFolder
.PP
An output folder called `cf_%05d/' will be created if no oFolder is
specified.
.SH EXAMPLES
.PP
See the script \f[C]/util/chromflock_run\f[R].
.SS Basic usage:
.PP
The bare minimum arguments needed are:
.IP
.nf
\f[C]
$ mflock --wFile ../W.uint8 --lFile ../L.uint8
\f[R]
.fi
.SH SEE ALSO
.PP
\f[B]chromflock\f[R], \f[B]aflock\f[R]
.SH WEB PAGE
.PP
<https://github.com/elgw/chromflock/>
.SH REPORTING BUGS
.PP
Please report bugs at <https://github.com/elgw/chromflock/issues/>
.SH COPYRIGHT
.PP
Copyright \[co] 2022 Erik Wernersson.
License GPLv3+: GNU GPL version 3 or later
<https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
.SH AUTHORS
Erik Wernersson.
